% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/rsat_derive.R
\name{rsat_derive}
\alias{rsat_derive}
\alias{rsat_derive,rtoi,character-method}
\alias{rsat_derive,rtoi,character}
\title{Computes a remote sensing index from an \code{rtoi}}
\usage{
rsat_derive(x, variable, ...)

\S4method{rsat_derive}{rtoi,character}(
  x,
  variable,
  product,
  dates,
  fun,
  overwrite = FALSE,
  verbose = FALSE,
  suppressWarnings = TRUE,
  ...
)
}
\arguments{
\item{x}{an \code{rtoi} as the source of images.}

\item{variable}{the name of the variable.}

\item{...}{additional argument for variable deriving}

\item{product}{the name of the product from which the index is computed.}

\item{dates}{a vector of dates being considered (optional).}

\item{fun}{a \code{function} that computes the remote sensing index.}

\item{overwrite}{logical argument. If \code{TRUE}, overwrites the existing
images with the same name.}

\item{verbose}{logical argument. If \code{TRUE}, the function prints the
running steps and warnings.}
}
\value{
nothing. The derived variables will be save in the hard drive.
Use get_stars to get the variables.
}
\description{
Combines the bands from multispectral satellite products through simple
math to highlight a process or material in the image.
}
\details{
The package contemplates some pre-defined indexes, which can be displayed
using the \code{show_variables()} function. To compute one of those, write
its name in the \code{variable} argument. Custom indexes can be
supplied through the \code{fun} argument. The function should use the
name of the bands as inputs (red, green, blue, nir, swir1, or swir2) and
return a single element. For instance, the Normalized Difference Snow
Index would be;

NDSI = function(green, swir1){
ndsi <- (green - swir1)/(green + swir1)
return(ndsi)
}
}
\examples{
\dontrun{
library(rsat)

# load navarre sf from the package
data(ex.navarre)

# set the credentials
set_credentials("username", "password")

# path where the region is stored
rtoi.path <- tempdir()
# path where downloads are stored
db.path <- file.path(tempdir(), "DATABASE")
navarre <- new_rtoi(
  "Navarre",
  ex.navarre,
  rtoi.path,
  db.path
)
# Landsat-5
sat_search(
  region = navarre,
  product = "LANDSAT_TM_C1",
  dates = as.Date("1988-08-01") + seq(1, 35)
)
download(navarre)

mosaic(navarre, overwrite = T)

derive(navarre, "NDVI", product = "LANDSAT_TM_C1")
}
}
